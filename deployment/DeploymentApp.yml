apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-deploy
  namespace: cwd-app
spec:
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api-container
        image: hazemhashem100/nodejs-app:6
        ports:
        - containerPort: 3000
        env:
        - name: RDS_HOSTNAME
          valueFrom:
            secretKeyRef:
              name: secrets-manager-secret
              key: RDS_HOSTNAME
        - name: RDS_USERNAME
          valueFrom:
            secretKeyRef:
              name: secrets-manager-secret
              key: RDS_USERNAME
        - name: RDS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: secrets-manager-secret
              key: RDS_PASSWORD
        - name: RDS_PORT
          valueFrom:
            secretKeyRef:
              name: secrets-manager-secret
              key: RDS_PORT

        - name: REDIS_HOSTNAME
          valueFrom:
            secretKeyRef:
              name: secrets-manager-secret
              key: REDIS_HOSTNAME
        - name: REDIS_PORT
          valueFrom:
            secretKeyRef:
              name: secrets-manager-secret
              key: REDIS_PORT


---
apiVersion: v1
kind: Service
metadata:
  name: api-service
  namespace: cwd-app
spec:
  type: ClusterIP
  selector:
    app: api
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP


---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: "app-ingress"
  namespace: cwd-app
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  ingressClassName: alb
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-service
            port:
              number: 80
